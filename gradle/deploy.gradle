apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId project.groupId
            artifactId project.artifactId
            version = project.versionName

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}


apply plugin: 'com.jfrog.bintray'

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    publications = ['mavenJava']
    //configurations = ['archives']

    dryRun = false // Whether to run this as dry-run, without deploying
    publish = false // If version should be auto published after an upload

    pkg {
        repo = project.packageRepository
        name = project.packageName
        desc = project.packageDescription
        websiteUrl = project.packageWebsiteUrl
        issueTrackerUrl = project.packageIssueTrackingUrl
        vcsUrl = project.packageVcsUrl
        licenses = project.packageLicenses
        labels = project.packageLabels
        publicDownloadNumbers = true

        // Optional version descriptor
        version {
            name = project.versionName // Bintray logical version name
            desc = project.versionDescription
            released = new Date()
            vcsTag = project.versionVcsTag
            // Optional version-level attributes
            // attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']

            // Optional configuration for GPG signing
            gpg {
                sign = false // Determines whether to GPG sign the files. The default is false
                passphrase = project.hasProperty('gpgPassword') ? project.property('gpgPassword') : ''
            }

            // Optional configuration for Maven Central sync of the version
            mavenCentralSync {
                // Optional (true by default). Determines whether to sync the version to Maven Central.
                sync = false
                user = 'userToken'
                password = 'password'
                // Optional property. By default the staging repository is closed and
                // artifacts are released to Maven Central. You can optionally turn
                // this behaviour off (by puting 0 as value) and release the version manually.
                close = '1'
            }
        }
    }
}
